[gd_scene load_steps=12 format=3 uid="uid://ck1vwuprf10pv"]

[ext_resource type="PackedScene" uid="uid://ybkxbop8s416" path="res://Player/Head.tscn" id="2"]
[ext_resource type="Script" path="res://Player/Sprint.gd" id="3"]
[ext_resource type="Texture2D" uid="uid://cdrgca8a0i0vw" path="res://Player/Crosshair.png" id="4"]
[ext_resource type="Script" path="res://Ammo/AmmoContainer.gd" id="5"]
[ext_resource type="Material" uid="uid://36b7bxwgwbo5" path="res://Common/Ammo Box Material.tres" id="6_ur7yq"]
[ext_resource type="Material" uid="uid://dctgtblvvcrem" path="res://Common/Battery Material.tres" id="7_0n527"]
[ext_resource type="Material" uid="uid://cjwduyau813h6" path="res://Common/rocket_bundle.tres" id="8_guqwq"]

[sub_resource type="GDScript" id="GDScript_mfihn"]
script/source = "class_name Pickups extends Node3D

@onready var ammo_box: Node3D = get_node(\"AmmoBox\")
@onready var battery: Node3D = get_node(\"Battery\")
@onready var rocket_bundle: Node3D = get_node(\"RocketBundle\")

signal picked_up_rocket_bundle
signal dropped_rocket_bundle

var pickup = Pickup.NONE

enum Pickup {
	AMMO_BOX,
	BATTERY,
	ROCKET_BUNDLE,
	NONE
}

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	pass


func pickup_battery(amount: int) -> void:
	_pickup_item(battery, amount, Pickup.BATTERY)


func pickup_ammo(amount: int) -> void:
	_pickup_item(ammo_box, amount, Pickup.AMMO_BOX)


func pickup_rocket_bundle(amount: int) -> void:
	picked_up_rocket_bundle.emit()
	_pickup_item(rocket_bundle, amount, Pickup.ROCKET_BUNDLE)


func remove_battery() -> int:
	return _remove_pickup(battery)


func remove_ammo() -> int:
	return _remove_pickup(ammo_box)


func remove_rocket_bundle() -> int:
	dropped_rocket_bundle.emit()
	return _remove_pickup(rocket_bundle)


func _pickup_item(instance, amount: int, type: Pickup) -> void:
	instance.set_ammo(amount)
	instance.visible = true
	pickup = type


func _remove_pickup(instance) -> int:
	instance.visible = false
	pickup = Pickup.NONE
	return instance.get_ammo()
"

[sub_resource type="BoxMesh" id="1"]
material = ExtResource("6_ur7yq")

[sub_resource type="BoxMesh" id="BoxMesh_g54aa"]
material = ExtResource("7_0n527")

[sub_resource type="BoxMesh" id="BoxMesh_h7wsc"]
material = ExtResource("8_guqwq")

[node name="Player"]

[node name="Head" parent="." index="1" instance=ExtResource("2")]

[node name="Sprint" type="Node" parent="." index="2"]
script = ExtResource("3")

[node name="TextureRect" type="TextureRect" parent="." index="3"]
offset_left = 576.0
offset_top = 324.0
offset_right = 592.0
offset_bottom = 340.0
texture = ExtResource("4")

[node name="Pickups" type="Node3D" parent="." index="4"]
script = SubResource("GDScript_mfihn")

[node name="AmmoBox" type="Node3D" parent="Pickups" index="0" groups=["ammo_box"]]
transform = Transform3D(0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0.532881, 0.0890193, -1.41915)
visible = false
script = ExtResource("5")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Pickups/AmmoBox" index="0"]
mesh = SubResource("1")

[node name="Battery" type="Node3D" parent="Pickups" index="1" groups=["ammo_box"]]
transform = Transform3D(0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0.532881, 0.0890193, -1.41915)
visible = false
script = ExtResource("5")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Pickups/Battery" index="0"]
mesh = SubResource("BoxMesh_g54aa")

[node name="RocketBundle" type="Node3D" parent="Pickups" index="2" groups=["ammo_box"]]
transform = Transform3D(0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0.532881, 0.0890193, -1.41915)
visible = false
script = ExtResource("5")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Pickups/RocketBundle" index="0"]
mesh = SubResource("BoxMesh_h7wsc")

[connection signal="dropped_rocket_bundle" from="Pickups" to="." method="_on_pickups_dropped_rocket_bundle"]
[connection signal="picked_up_rocket_bundle" from="Pickups" to="." method="_on_pickups_picked_up_rocket_bundle"]
